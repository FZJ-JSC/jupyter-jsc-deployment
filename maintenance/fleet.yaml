defaultNamespace: jupyterjsc
helm:
  values:
    fullnameOverride: "jhub-maintenance"
dependsOn:
  - name: jupyterjsc-certmanager
targetCustomizations:
  - name: staging
    clusterSelector:
      matchLabels:
        stage: staging
        provider.cattle.io: rke
    helm:
      values:
        # Set JupyterHub in maintenance:
          #   Set enabled here to true, update ingress in jhub[-juniq|-eurocc]/helm/fleet.yaml
          #   Update ingress.hosts and ingress.tls in this file, if only specific hubs should go in maintenance
        enabled: false
        ingress:
          annotations:
            acme.cert-manager.io/http01-edit-in-place: "false"
            cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
          hosts:
            - host: jupyter-jsc-staging.fz-juelich.de
              paths:
                - path: /
                  pathType: Prefix
              svcName: jhub-maintenance
              svcPort: 80
            - host: jupyter-staging.eurocc-gcs.de
              paths:
                - path: /
                  pathType: Prefix
              svcName: jhub-maintenance
              svcPort: 80
            - host: juniq-staging.fz-juelich.de
              paths:
                - path: /
                  pathType: Prefix
              svcName: jhub-maintenance
              svcPort: 80
            - host: zam10199.zam.kfa-juelich.de
              #host: coeraise
              paths:
                - path: /
                  pathType: Prefix
              svcName: jhub-maintenance
              svcPort: 80
          tls:
            - hosts:
                - jupyter-jsc-staging.fz-juelich.de
              secretName: jupyter-jsc-tls
            - hosts:
                - jupyter-staging.eurocc-gcs.de
              secretName: eurocc-tls
            - hosts:
                - juniq-staging.fz-juelich.de
              secretName: juniq-tls
            - hosts:
                - zam10199.zam.kfa-juelich.de
              secretName: coeraise-tls
  - name: production
    clusterSelector:
      matchLabels:
        stage: production
        provider.cattle.io: rke
    helm:
      values:
        # Set JupyterHub in maintenance:
          #   Set enabled here to true, update ingress in jhub[-juniq|-eurocc]/helm/fleet.yaml
          #   Update ingress.hosts and ingress.tls in this file, if only specific hubs should go in maintenance
        enabled: false
        ingress:
          annotations:
            acme.cert-manager.io/http01-edit-in-place: "false"
            cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
          hosts:
            - host: jupyter-jsc.fz-juelich.de
              paths:
                - path: /
                  pathType: Prefix
              svcName: jhub-maintenance
              svcPort: 80
            - host: jupyter.eurocc-gcs.de
              paths:
                - path: /
                  pathType: Prefix
              svcName: jhub-maintenance
              svcPort: 80
            - host: juniq.fz-juelich.de
              paths:
                - path: /
                  pathType: Prefix
              svcName: jhub-maintenance
              svcPort: 80
          tls:
            - hosts:
                - jupyter-jsc.fz-juelich.de
              secretName: jupyter-jsc-tls
            - hosts:
                - jupyter.eurocc-gcs.de
              secretName: eurocc-tls
            - hosts:
                - juniq.fz-juelich.de
              secretName: juniq-certs
