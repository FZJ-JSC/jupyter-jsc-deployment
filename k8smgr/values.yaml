# Default values for k8smgr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "k8smgr"

# Allows interactive start via VSCode to debug code
devel: False

# passed on to Django as DEBUG env variable
debug: True

authoried_keys: []

deploymentNamespace: "userlabs"

tunnel:
  port: 2222
  user: tunnel
  host: drf-tunnel.jupyterjsc.svc

jupyterhub:
  host: proxy-public
  port: 443

gitconfig:
  branch: "k8smgr-dev"
  secret: "jupyter-jsc-config"

secrets:
  keypairs: "drf-k8smgr-keypairs"
  passwds: "drf-k8smgr-passwds"
  databaseGeneral: "postgresql-general"
  databaseUsers: "postgresql-users-jupyterjsc"
  tunnelpasswds: "drf-tunnel-passwds"

extraVolumes: []
extraVolumeMounts: []

image:
  repository: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/k8s-service-manager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.4-2"

imagePullSecrets:
  - name: gitlab-registry

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

servicessh:
  type: ClusterIP
  port: 2222

servicefwd:
  type: ClusterIP
  port: 56789

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
